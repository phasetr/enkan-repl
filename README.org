#+TITLE: claudemacs-repl
#+AUTHOR: [phasetr]
#+EMAIL: phasetr@gmail.com
#+OPTIONS: toc:2 num:nil

[[https://melpa.org/#/claudemacs-repl][file:https://melpa.org/packages/claudemacs-repl-badge.svg]]
[[https://stable.melpa.org/#/claudemacs-repl][file:https://stable.melpa.org/packages/claudemacs-repl-badge.svg]]
[[https://github.com/phasetr/claudemacs-repl/actions/workflows/ci.yml][file:https://github.com/phasetr/claudemacs-repl/actions/workflows/ci.yml/badge.svg]]

Enhanced REPL utilities for seamless Claude Code interaction through Emacs.

** Table of Contents
:PROPERTIES:
:TOC:      :include all :depth 2
:END:
:CONTENTS:
- [[#installation][Installation]]
- [[#usage][Usage]]
- [[#features][Features]]
- [[#background][Background]]
- [[#contributing][Contributing]]
- [[#license][License]]
:END:

** Installation

*** From MELPA

=claudemacs-repl= is available on [[https://melpa.org/][MELPA]].

#+BEGIN_SRC emacs-lisp
(use-package claudemacs-repl
  :ensure t
  :after claudemacs)
#+END_SRC

*** Manual Installation

#+BEGIN_SRC bash
git clone https://github.com/phasetr/claudemacs-repl.git
#+END_SRC

Add to your Emacs configuration:

#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "/path/to/claudemacs-repl")
(require 'claudemacs-repl)
#+END_SRC

** Usage

*** Quick Start

1. Start a Claude Code session: ~M-x claudemacs-repl-start-claudemacs~
2. Open project input file: ~M-x claudemacs-repl-open-project-input-file~
3. Write your thoughts and send them with ~M-x claudemacs-repl-send-region~

*** Workflow

=claudemacs-repl= creates persistent org-mode files for each project directory.
These files serve as your thinking space - write extensively, then send
only relevant parts to Claude Code using the send commands.

** Background

I frequently collaborate with Claude Code and found myself
keeping inspired thoughts noted for immediate use after AI work is complete.
For text work, I naturally turned to Emacs.
After trying several packages that didn't quite fit,
I decided to build my own on top of [[https://github.com/cpoile/claudemacs][claudemacs]].

** Features

*** Text Sending Capabilities
- =claudemacs-repl-send-region= - Send selected text to Claude
- =claudemacs-repl-send-buffer= - Send entire buffer content
- =claudemacs-repl-send-rest-of-buffer= - Send entire buffer content
- =claudemacs-repl-send-line= - Send current line
- =claudemacs-repl-send-enter= - Send enter key for prompts
- =claudemacs-repl-send-1= - Send numbered choices for AI prompts
- =claudemacs-repl-send-2= - Send numbered choices for AI prompts
- =claudemacs-repl-send-3= - Send numbered choices for AI prompts
- =claudemacs-repl-send-escape= - Send ESC key to interrupt operations
- *File Path Support*: Send file paths for Claude to read directly (e.g., =~/project/config.json=)

*** Project Management
These features rely on the underlying claudemacs functionality,
and their constraints depend on that implementation.

- *Persistent Input Files*: Org-mode files with filename-encoded directory mapping
  (based on claudemacs buffer name mode detection specification as of Aug 2025)
- *Template System*: Customizable templates with default.org included
- *Directory-based Targeting*: Automatically match files to appropriate claudemacs sessions
- *Multi-project Support*: Handle multiple Claude sessions in different directories simultaneously

*** Session Management
- =claudemacs-repl-start-claudemacs= - Launch Claude session in appropriate directory
  (only wraps =claudemacs-transient-menu=)

*** Session Control
- =claudemacs-repl-send-enter= - Send enter key
- =claudemacs-repl-send-1/2/3= - Send numbered choices for AI prompts

*** Utilities
- =claudemacs-repl-start-claudemacs= - Start Claude session in appropriate directory
- =claudemacs-repl-setup-window-layout= - Arrange windows for (the author's) optimal workflow
- =claudemacs-repl-status= - Diagnostic information for troubleshooting
- =claudemacs-repl-toggle-debug-mode= - Enable/disable debug messages

** Contributing

See [[file:CONTRIBUTING.md][CONTRIBUTING.md]] for development setup and guidelines.

** License

MIT License. See [[file:LICENSE][LICENSE]] file for details.
